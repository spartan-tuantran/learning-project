{"@timestamp":"2024-10-30T15:04:34.438534+07:00","@version":"1","message":"Error starting Micronaut server: Bean definition [java.lang.String] could not be loaded: Failed to inject value for parameter [url] of class: com.alext.api.runtime.config.AppConfiguration\n\nMessage: Failed to inject value for parameter [url] of class: com.alext.api.runtime.config.AppConfiguration\n\nMessage: Error resolving property value [app.url]. Property doesn't exist\nPath Taken: DatabaseFactory.provide(AppConfiguration appConfiguration) --> DatabaseFactory.provide([AppConfiguration appConfiguration]) --> new AppConfiguration([String url])\nPath Taken: DatabaseFactory.provide(AppConfiguration appConfiguration) --> DatabaseFactory.provide([AppConfiguration appConfiguration]) --> new AppConfiguration([String url])","logger_name":"io.micronaut.runtime.Micronaut","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"<#e077c147> i.m.c.e.DependencyInjectionException: Failed to inject value for parameter [url] of class: com.alext.api.runtime.config.AppConfiguration\n\nMessage: Failed to inject value for parameter [url] of class: com.alext.api.runtime.config.AppConfiguration\n\nMessage: Error resolving property value [app.url]. Property doesn't exist\nPath Taken: DatabaseFactory.provide(AppConfiguration appConfiguration) --> DatabaseFactory.provide([AppConfiguration appConfiguration]) --> new AppConfiguration([String url])\nPath Taken: DatabaseFactory.provide(AppConfiguration appConfiguration) --> DatabaseFactory.provide([AppConfiguration appConfiguration]) --> new AppConfiguration([String url])\n\tat i.m.c.e.DependencyInjectionException.missingProperty(DependencyInjectionException.java:289)\n\tat i.m.c.AbstractInitializableBeanDefinition.lambda$resolvePropertyValue$9(AbstractInitializableBeanDefinition.java:2166)\n\tat java.util.Optional.orElseThrow(Optional.java:403)\n\tat i.m.c.AbstractInitializableBeanDefinition.resolvePropertyValue(AbstractInitializableBeanDefinition.java:2166)\n\tat i.m.c.AbstractInitializableBeanDefinition.getPropertyValueForConstructorArgument(AbstractInitializableBeanDefinition.java:1415)\n\tat c.a.b.r.c.$AppConfiguration$Definition.instantiate(Unknown Source)\n\tat i.m.c.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2330)\n\tat i.m.c.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2300)\n\tat i.m.c.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2312)\n\tat i.m.c.DefaultBeanContext.createRegistration(DefaultBeanContext.java:3123)\n\tat i.m.c.SingletonScope.getOrCreate(SingletonScope.java:80)\n\tat i.m.c.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:3025)\n\tat i.m.c.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2986)\n\tat i.m.c.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2752)\n\tat i.m.c.DefaultBeanContext.getBean(DefaultBeanContext.java:1745)\n\tat i.m.c.AbstractBeanResolutionContext.getBean(AbstractBeanResolution...\n"}
{"@timestamp":"2024-10-30T15:15:41.615127+07:00","@version":"1","message":"Error starting Micronaut server: Bean definition [java.lang.String] could not be loaded: Failed to inject value for parameter [url] of class: com.alext.api.runtime.config.AppConfiguration\n\nMessage: Failed to inject value for parameter [url] of class: com.alext.api.runtime.config.AppConfiguration\n\nMessage: Error resolving property value [app.url]. Property doesn't exist\nPath Taken: DatabaseFactory.provide(AppConfiguration appConfiguration) --> DatabaseFactory.provide([AppConfiguration appConfiguration]) --> new AppConfiguration([String url])\nPath Taken: DatabaseFactory.provide(AppConfiguration appConfiguration) --> DatabaseFactory.provide([AppConfiguration appConfiguration]) --> new AppConfiguration([String url])","logger_name":"io.micronaut.runtime.Micronaut","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"<#e077c147> i.m.c.e.DependencyInjectionException: Failed to inject value for parameter [url] of class: com.alext.api.runtime.config.AppConfiguration\n\nMessage: Failed to inject value for parameter [url] of class: com.alext.api.runtime.config.AppConfiguration\n\nMessage: Error resolving property value [app.url]. Property doesn't exist\nPath Taken: DatabaseFactory.provide(AppConfiguration appConfiguration) --> DatabaseFactory.provide([AppConfiguration appConfiguration]) --> new AppConfiguration([String url])\nPath Taken: DatabaseFactory.provide(AppConfiguration appConfiguration) --> DatabaseFactory.provide([AppConfiguration appConfiguration]) --> new AppConfiguration([String url])\n\tat i.m.c.e.DependencyInjectionException.missingProperty(DependencyInjectionException.java:289)\n\tat i.m.c.AbstractInitializableBeanDefinition.lambda$resolvePropertyValue$9(AbstractInitializableBeanDefinition.java:2166)\n\tat java.util.Optional.orElseThrow(Optional.java:403)\n\tat i.m.c.AbstractInitializableBeanDefinition.resolvePropertyValue(AbstractInitializableBeanDefinition.java:2166)\n\tat i.m.c.AbstractInitializableBeanDefinition.getPropertyValueForConstructorArgument(AbstractInitializableBeanDefinition.java:1415)\n\tat c.a.b.r.c.$AppConfiguration$Definition.instantiate(Unknown Source)\n\tat i.m.c.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2330)\n\tat i.m.c.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2300)\n\tat i.m.c.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2312)\n\tat i.m.c.DefaultBeanContext.createRegistration(DefaultBeanContext.java:3123)\n\tat i.m.c.SingletonScope.getOrCreate(SingletonScope.java:80)\n\tat i.m.c.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:3025)\n\tat i.m.c.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2986)\n\tat i.m.c.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2752)\n\tat i.m.c.DefaultBeanContext.getBean(DefaultBeanContext.java:1745)\n\tat i.m.c.AbstractBeanResolutionContext.getBean(AbstractBeanResolution...\n"}
{"@timestamp":"2024-10-30T15:16:09.164425+07:00","@version":"1","message":"application starts","logger_name":"com.alext.api.events.MainApplicationStartupEventListener","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-10-30T15:16:09.168486+07:00","@version":"1","message":"Startup completed in 630ms. Server Running: http://localhost:8080","logger_name":"io.micronaut.runtime.Micronaut","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-10-30T15:16:27.170585+07:00","@version":"1","message":"Embedded Application shutting down","logger_name":"io.micronaut.runtime.Micronaut","thread_name":"Thread-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-10-30T15:16:27.172998+07:00","@version":"1","message":"application shutdowns","logger_name":"com.alext.api.events.MainApplicationShutdownEventListener","thread_name":"Thread-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-10-30T15:16:38.481511+07:00","@version":"1","message":"application starts","logger_name":"com.alext.api.events.MainApplicationStartupEventListener","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-10-30T15:16:38.486537+07:00","@version":"1","message":"Startup completed in 9835ms. Server Running: http://localhost:8080","logger_name":"io.micronaut.runtime.Micronaut","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-10-30T15:16:58.813256+07:00","@version":"1","message":"Embedded Application shutting down","logger_name":"io.micronaut.runtime.Micronaut","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2024-10-30T15:16:58.816351+07:00","@version":"1","message":"application shutdowns","logger_name":"com.alext.api.events.MainApplicationShutdownEventListener","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2024-10-30T15:17:06.040579+07:00","@version":"1","message":"application starts","logger_name":"com.alext.api.events.MainApplicationStartupEventListener","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-10-30T15:17:06.045416+07:00","@version":"1","message":"Startup completed in 5458ms. Server Running: http://localhost:8080","logger_name":"io.micronaut.runtime.Micronaut","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-10-30T15:19:51.148828+07:00","@version":"1","message":"Embedded Application shutting down","logger_name":"io.micronaut.runtime.Micronaut","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2024-10-30T15:19:51.151683+07:00","@version":"1","message":"application shutdowns","logger_name":"com.alext.api.events.MainApplicationShutdownEventListener","thread_name":"Thread-1","level":"INFO","level_value":20000}
{"@timestamp":"2024-10-30T15:19:53.794743+07:00","@version":"1","message":"Error starting Micronaut server: Bean definition [java.lang.String] could not be loaded: Failed to inject value for parameter [url] of class: com.alext.api.runtime.config.AppConfiguration\n\nMessage: Failed to inject value for parameter [url] of class: com.alext.api.runtime.config.AppConfiguration\n\nMessage: Error resolving property value [apps.url]. Property doesn't exist\nPath Taken: DatabaseFactory.provide(AppConfiguration appConfiguration) --> DatabaseFactory.provide([AppConfiguration appConfiguration]) --> new AppConfiguration([String url])\nPath Taken: DatabaseFactory.provide(AppConfiguration appConfiguration) --> DatabaseFactory.provide([AppConfiguration appConfiguration]) --> new AppConfiguration([String url])","logger_name":"io.micronaut.runtime.Micronaut","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"<#e077c147> i.m.c.e.DependencyInjectionException: Failed to inject value for parameter [url] of class: com.alext.api.runtime.config.AppConfiguration\n\nMessage: Failed to inject value for parameter [url] of class: com.alext.api.runtime.config.AppConfiguration\n\nMessage: Error resolving property value [apps.url]. Property doesn't exist\nPath Taken: DatabaseFactory.provide(AppConfiguration appConfiguration) --> DatabaseFactory.provide([AppConfiguration appConfiguration]) --> new AppConfiguration([String url])\nPath Taken: DatabaseFactory.provide(AppConfiguration appConfiguration) --> DatabaseFactory.provide([AppConfiguration appConfiguration]) --> new AppConfiguration([String url])\n\tat i.m.c.e.DependencyInjectionException.missingProperty(DependencyInjectionException.java:289)\n\tat i.m.c.AbstractInitializableBeanDefinition.lambda$resolvePropertyValue$9(AbstractInitializableBeanDefinition.java:2166)\n\tat java.util.Optional.orElseThrow(Optional.java:403)\n\tat i.m.c.AbstractInitializableBeanDefinition.resolvePropertyValue(AbstractInitializableBeanDefinition.java:2166)\n\tat i.m.c.AbstractInitializableBeanDefinition.getPropertyValueForConstructorArgument(AbstractInitializableBeanDefinition.java:1415)\n\tat c.a.b.r.c.$AppConfiguration$Definition.instantiate(Unknown Source)\n\tat i.m.c.DefaultBeanContext.resolveByBeanFactory(DefaultBeanContext.java:2330)\n\tat i.m.c.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2300)\n\tat i.m.c.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:2312)\n\tat i.m.c.DefaultBeanContext.createRegistration(DefaultBeanContext.java:3123)\n\tat i.m.c.SingletonScope.getOrCreate(SingletonScope.java:80)\n\tat i.m.c.DefaultBeanContext.findOrCreateSingletonBeanRegistration(DefaultBeanContext.java:3025)\n\tat i.m.c.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2986)\n\tat i.m.c.DefaultBeanContext.resolveBeanRegistration(DefaultBeanContext.java:2752)\n\tat i.m.c.DefaultBeanContext.getBean(DefaultBeanContext.java:1745)\n\tat i.m.c.AbstractBeanResolutionContext.getBean(AbstractBeanResolutio...\n"}
