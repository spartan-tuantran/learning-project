[versions]
arrow = "1.2.4"
assertj = "3.25.3"
awaitility = "4.2.2"
autoService = "1.1.1"
autoServiceKsp = "1.1.0"
caffeine = "3.1.8"
commons-csv = "1.9.0"
commons-lang3 = "3.9"
exposed = "0.41.1"
hikari = "5.1.0"
jackson = "2.18.0"
janino = "3.1.12"
jbcrypt = "0.4"
jedis = "5.2.0"
jdbi = "3.46.0"
jts = "1.19.0"
junit5 = "5.11.3"
kotlin = "2.0.21"
kotlinPoet = "1.11.0"
kotlinx = "1.9.0"
ksp = "2.0.21-1.0.26"
kspTesting = "1.5.0"
kstatd-api = "1.0.0"
kstatd-datadog = "1.0.0"
ktlintPlugin = '12.1.0'
libPhoneNumber = "8.13.34"
logbackClassic = "1.5.3"
logstash = "8.0"
mockk = "1.13.10"
okhttp = "4.12.0"
postgresql = "42.7.4"
postgis = "2.5.1"
redisson = "3.37.0"
retrofit = "2.11.0"
serializationJson = "1.7.3"
shadow = "8.1.1"
slf4j = "2.0.16"
snakeYaml = "2.2"
snappy = "1.1.10.7"
spatial4j = "0.8"
spongyCastle = "1.58.0.0"
strikt = "0.34.1"

[plugins]
allopen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlintPlugin" }
shadow = { id = "com.github.johnrengelman.shadow", version.ref = "shadow" }

[libraries]
apache-common-csv = { module = "org.apache.commons:commons-csv", version.ref = "commons-csv" }
apache-common-lang3 = { module = "org.apache.commons:commons-lang3", version.ref = "commons-lang3" }
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
codegen-auto-service = { module = "com.google.auto.service:auto-service", version.ref = "autoService" }
codegen-auto-service-annotation = { module = "com.google.auto.service:auto-service-annotations", version.ref = "autoService" }
codegen-auto-service-ksp = { module = "dev.zacsweers.autoservice:auto-service-ksp", version.ref = "autoServiceKsp" }
codegen-kotlin-compile-testing = { module = "com.github.tschuchortdev:kotlin-compile-testing", version.ref = "kspTesting" }
codegen-kotlin-compile-testing-ksp = { module = "com.github.tschuchortdev:kotlin-compile-testing-ksp", version.ref = "kspTesting" }
codegen-kotlinpoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinPoet" }
codegen-kotlinpoet-ksp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "kotlinPoet" }
codegen-symbolprocessing = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
compiler-janino = { module = "org.codehaus.janino:janino", version.ref = "janino" }
crypto-jbcrypt = { module = "org.mindrot:jbcrypt", version.ref = "jbcrypt" }
crypto-snappy-java = { module = "org.xerial.snappy:snappy-java", version.ref = "snappy" }
crypto-spongycastle-core = { module = "com.madgag.spongycastle:core", version.ref = "spongyCastle" }
database-hikaricp = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }
database-jdbi-core = { module = "org.jdbi:jdbi3-core", version.ref = "jdbi" }
database-postgis-jdbc = { module = "net.postgis:postgis-jdbc", version.ref = "postgis" }
database-postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-java-time = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
geospatial-jts = { module = "org.locationtech.jts:jts-core", version.ref = "jts" }
geospatial-spatial4j = { module = "org.locationtech.spatial4j:spatial4j", version.ref = "spatial4j" }
jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "jackson" }
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
kotlin-reflect = { group = "org.jetbrains.kotlin", name = "kotlin-reflect", version.ref = "kotlin" }
kotlin-stdlib = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib", version.ref = "kotlin" }
kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinx" }
kotlinx-coroutines-jdk8 = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-jdk8", version.ref = "kotlinx" }
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "serializationJson" }
kstatd-api = { module = "com.c0x12c.kstatd:api", version.ref = "kstatd-api" }
kstatd-datadog = { module = "com.c0x12c.kstatd:datadog", version.ref = "kstatd-datadog" }
logging-logbackClassic = { module = "ch.qos.logback:logback-classic", version.ref = "logbackClassic" }
logging-logbackLogstash = { module = "net.logstash.logback:logstash-logback-encoder", version.ref = "logstash" }
logging-slf4j = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
networking-okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
networking-okhttp-logging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
networking-okhttp-mockserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp" }
networking-retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
networking-retrofit-jackson = { module = "com.squareup.retrofit2:converter-jackson", version.ref = "retrofit" }
networking-retrofit-scalars = { module = "com.squareup.retrofit2:converter-scalars", version.ref = "retrofit" }
redis-redisson = { module = "org.redisson:redisson", version.ref = "redisson" }
redis-jedis = { module = "redis.clients:jedis", version.ref = "jedis" }
testing-assertj = { module = "org.assertj:assertj-core", version.ref = "assertj" }
testing-awaitility = { module = "org.awaitility:awaitility", version.ref = "awaitility" }
testing-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit5" }
testing-mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
testing-strikt = { module = "io.strikt:strikt-jvm", version.ref = "strikt" }
utility-caffeine = { module = "com.github.ben-manes.caffeine:caffeine", version.ref = "caffeine" }
utility-libphonenumber = { module = "com.googlecode.libphonenumber:libphonenumber", version.ref = "libPhoneNumber" }
utility-snakeyaml = { module = "org.yaml:snakeyaml", version.ref = "snakeYaml" }
